/* Generated By:JavaCC: Do not edit this line. compConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface compConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int TYPES = 5;
  /** RegularExpression Id. */
  int NUMBER = 6;
  /** RegularExpression Id. */
  int IDENTIFIER = 7;
  /** RegularExpression Id. */
  int CADENA = 8;
  /** RegularExpression Id. */
  int ASIGNACION = 9;
  /** RegularExpression Id. */
  int PLUS = 10;
  /** RegularExpression Id. */
  int MINUS = 11;
  /** RegularExpression Id. */
  int MULTIPLY = 12;
  /** RegularExpression Id. */
  int DIVIDE = 13;
  /** RegularExpression Id. */
  int INCR = 14;
  /** RegularExpression Id. */
  int DECR = 15;
  /** RegularExpression Id. */
  int MAIN = 16;
  /** RegularExpression Id. */
  int PROGRAMA = 17;
  /** RegularExpression Id. */
  int IF = 18;
  /** RegularExpression Id. */
  int ELSE = 19;
  /** RegularExpression Id. */
  int ELSEIF = 20;
  /** RegularExpression Id. */
  int FOR = 21;
  /** RegularExpression Id. */
  int SWITCH = 22;
  /** RegularExpression Id. */
  int CASE = 23;
  /** RegularExpression Id. */
  int BREAK = 24;
  /** RegularExpression Id. */
  int DEFAUL = 25;
  /** RegularExpression Id. */
  int DO = 26;
  /** RegularExpression Id. */
  int WHILE = 27;
  /** RegularExpression Id. */
  int WRITE = 28;
  /** RegularExpression Id. */
  int READ = 29;
  /** RegularExpression Id. */
  int LPAREN = 30;
  /** RegularExpression Id. */
  int RPAREN = 31;
  /** RegularExpression Id. */
  int LBRACE = 32;
  /** RegularExpression Id. */
  int RBRACE = 33;
  /** RegularExpression Id. */
  int LBRACKET = 34;
  /** RegularExpression Id. */
  int RBRACKET = 35;
  /** RegularExpression Id. */
  int SEMICOLON = 36;
  /** RegularExpression Id. */
  int COMMA = 37;
  /** RegularExpression Id. */
  int DOT = 38;
  /** RegularExpression Id. */
  int EQ = 39;
  /** RegularExpression Id. */
  int LE = 40;
  /** RegularExpression Id. */
  int GE = 41;
  /** RegularExpression Id. */
  int NE = 42;
  /** RegularExpression Id. */
  int OR = 43;
  /** RegularExpression Id. */
  int AND = 44;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "<TYPES>",
    "<NUMBER>",
    "<IDENTIFIER>",
    "<CADENA>",
    "\"= \"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"++\"",
    "\"--\"",
    "\"public static void Main() \"",
    "\"Programa \"",
    "\"ien \"",
    "\"iotro \"",
    "\"ien_otro \"",
    "\"irepetir \"",
    "\"ialternativa \"",
    "\"iopcion \"",
    "\"itermina \"",
    "\"ipredef \"",
    "\"ia \"",
    "\"iespera \"",
    "\"iescribir \"",
    "\"ileer \"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
  };

}
